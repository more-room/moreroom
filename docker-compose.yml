services:
  nginx:
    image: ${DOCKER_IMAGE}:${DOCKER_TAG_FE}-latest
    container_name: ${DOCKER_TAG_FE}
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOCKER_TAG_BE=${DOCKER_TAG_BE}
      - BACKEND_PORT=${BACKEND_PORT}
      - SERVER_NAME=${SERVER_NAME}
      - CONTEXT_PATH=${CONTEXT_PATH}
      - TZ=Asia/Seoul
    volumes:
      # - /home/ubuntu/data/certbot/conf:/etc/letsencrypt
      # - /home/ubuntu/data/certbot/www:/var/www/certbot
    networks:
      - backend-network
    depends_on:
      - ${DOCKER_TAG_BE}

  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - /home/ubuntu/data/certbot/conf:/etc/letsencrypt
  #     - /home/ubuntu/data/certbot/www:/var/www/certbot
  #   depends_on:
  #     - nginx
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot --deploy-hook \"docker-compose exec nginx nginx -s reload\"; sleep 60d & wait $${!}; done;'"

  springboot:
    image: ${DOCKER_IMAGE}:${DOCKER_TAG_BE}-latest
    container_name: ${DOCKER_TAG_BE}
    environment:
      - PROFILES_ACTIVE=${PROFILES_ACTIVE}
      - BACKEND_PORT=${BACKEND_PORT}
      - MYSQL_URL=${MYSQL_URL}
      - MYSQL_ROOT_USERNAME=${MYSQL_ROOT_USERNAME}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - MONGODB_URL=${MONGODB_URL}
      - TZ=Asia/Seoul
    expose:
      - ${BACKEND_PORT}
    networks:
      - backend-network
    depends_on:
      - mysql
      - redis
      - mongodb
    

  mysql:
    image: mysql:8.0.32
    container_name: mysql-con
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=Asia/Seoul
    volumes:
      - mysql_vol:/var/lib/mysql
    ports:
      - "${MYSQL_BINDING_PORT}:3306"
    networks:
      - backend-network
    command: --lower_case_table_names=1

  redis:
    image: redis:latest
    container_name: my-redis
    environment:
      - TZ=Asia/Seoul
    volumes:
      - redis_data:/data
      - ${REDIS_DEFAULT_CONFIG_FILE}:/usr/local/etc/redis/redis.conf
    ports:
      - "${REDIS_BINDING_PORT}:6379"
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - backend-network
      
  mongodb:
    image: mongo:latest
    container_name: mongodb-con
    volumes:
      - mongo-vol:/data/db
    environment:
      - TZ=Asia/Seoul
    ports:
      - "${MONGO_BINDING_PORT}:27017"
    networks:
      - backend-network

volumes:
  mysql_vol:
    external: true
  redis_data:
    external: true
  mongo-vol:
    external: true

networks:
  backend-network:
    name: backend-network
    driver: bridge